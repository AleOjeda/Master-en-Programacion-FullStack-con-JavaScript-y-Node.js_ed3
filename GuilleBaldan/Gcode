/*Transformation  Table
IIIII = V
VV = X
XXXXX = L
LL = C
CCCCC = D
DD = M
*/
var symbolRepeated = ["IIIII","VV","XXXXX","LL","CCCCC","DD"];
var basic = ["V","X","L","C","D","M"];
var symbolRepeatedII = ["IIII","XXXX","CCCC"];
var basicII = ["IV","XL","CD"];
var symbolRepeatedIII = ["VIV","XIX","IXXX"];
var basicIII =["IX","IXX","IXXL"];
var number = 39;
var cadenaprueba ="IIIII"
//Mision 1 Convertir cualquier número en una ristra de I.
function firstConversion(number){
var result = "";
for(i = 0;i<number;i++){
  result += "I"
}
  return result;
}
console.log("Mission 1: "+number+" = "+firstConversion(number));
//Mision 2 Crear grupos de V
/*Descripción del algoritmo:
1º Sustituye las I ¿Hay cadenas "IIIII"?
2º Sustituye las V ¿Hay cadenas "VV"?
3º Sustituyes las X ¿Hay cadenas "XXXXX"?
*/
function sustitution(iChain){
  
  for(i=0;i<symbolRepeated.length;i++){ //Process ONE
   do {
   iChain=  iChain.replace(symbolRepeated[i],basic[i]);
    }while(iChain.indexOf(symbolRepeated[i]) !== -1)

  }
   for(i=0;i<symbolRepeatedII.length;i++){ //Process TWO
   do {
   iChain=  iChain.replace(symbolRepeatedII[i],basicII[i]);
    }while(iChain.indexOf(symbolRepeatedII[i]) !== -1)

  }
    for(i=0;i<symbolRepeatedIII.length;i++){ //Process THREE
   do {
   iChain=  iChain.replace(symbolRepeatedIII[i],basicIII[i]);
    }while(iChain.indexOf(symbolRepeatedIII[i]) !== -1)

  }
  
return iChain;  
}
